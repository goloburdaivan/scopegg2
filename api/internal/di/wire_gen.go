// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"context"
	"github.com/aws/aws-sdk-go-v2/aws"
	config2 "github.com/aws/aws-sdk-go-v2/config"
	"github.com/hibiken/asynq"
	"scopegg2/internal/config"
	"scopegg2/internal/handlers"
	"scopegg2/internal/queue/redis"
	"scopegg2/internal/server"
	"scopegg2/internal/services"
)

// Injectors from wire.go:

func InitializeApp(cfg *config.Config) (*server.App, error) {
	client := newRedisClient(cfg)
	taskQueue := redis.NewRedisTaskQueue(client)
	awsConfig, err := newAWSConfig()
	if err != nil {
		return nil, err
	}
	demoUploader := services.NewS3DemoUploader(awsConfig, cfg)
	demoService := services.NewDemoService(taskQueue, demoUploader)
	uploadDemoHandler := handlers.NewUploadDemoHandler(demoService)
	engine := server.NewRouter(uploadDemoHandler)
	app := server.NewApp(engine)
	return app, nil
}

// wire.go:

func newRedisClient(cfg *config.Config) *asynq.Client {
	return asynq.NewClient(asynq.RedisClientOpt{
		Addr: cfg.RedisUrl,
	})
}

func newAWSConfig() (aws.Config, error) {
	return config2.LoadDefaultConfig(context.TODO())
}
